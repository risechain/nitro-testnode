version: "3.9"
services:
  generate_jwt_hex:
    image: debian:latest
    volumes:
      - "config:/config"
    entrypoint:
      
    command: 

      if [ ! -f /config/jwt.hex ]; then
        openssl rand -hex 32 | tr -d "\n" > "/config/jwt.hex"
      fi

  geth:
    image: ethereum/client-go:v1.10.23
    ports:
      - "127.0.0.1:8545:8545"
      - "127.0.0.1:8551:8551"
      - "127.0.0.1:8546:8546"
      - "127.0.0.1:30303:30303"
    volumes:
      - "l1data:/datadir"
      - "config:/config"
    command:
      - --sepolia
      - --http
      - --http.api eth,net,engine,admin
      - --authrpc.jwtsecret=/config/jwt.hex
      - --datadir /datadir
    depends_on:
      generate_jwt_hex:
        condition: service_completed_successfully

  # Runs a Prysm beacon chain from a specified genesis state created in the previous step
  # and connects to go-ethereum in the same network as the execution client.
  # The account used in go-ethereum is set as the suggested fee recipient for transactions
  # proposed via the validators attached to the beacon node.
  prysm_beacon_chain:
    image: "gcr.io/prysmaticlabs/prysm/beacon-chain:v4.2.0"
    command:
      - --sepolia
      - --execution-endpoint=http://geth:8551
      - --jwt-secret=/config/jwt.hex
      - --checkpoint-sync-url=https://sepolia.beaconstate.info
      - --genesis-beacon-api-url=https://sepolia.beaconstate.info
      - --datadir=/consensus/beacondata
    depends_on:
      geth:
        condition: service_started
      generate_jwt_hex:
        condition: service_completed_successfully
    ports:
      - "127.0.0.1:5000:5000"
      - "127.0.0.1:3500:3500"
    volumes:
      - "consensus:/consensus"
      - "config:/config"

volumes:
  config:
  l1data:
    driver: local
    driver_opts:
      o: bind
      type: none 
      device: /mnt/disks/data/docker/l1data
  consensus:
    driver: local
    driver_opts:
      o: bind
      type: none 
      device: /mnt/disks/data/docker/consensus
